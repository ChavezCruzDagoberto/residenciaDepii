<div class="main" id="principal">

    {{!-- Este div permite ocupar el 100% de pantalla disponible --}}
    <div class="container-fluid">

        {{!-- div centra horizontalmente el contenido --}}
        <div class="d-flex justify-content-center vh-80">

            {{!-- div centra verticalmente el contenido --}}
            <div class="align-items-start w-100 mt-5" id="contenedorprincipal">

                {{!-- Cabecera --}}
                <div class="w-100 mb-5" align="center">
                    <h1 class="mb-5"> Avance del proyecto. </h1>
                    <h4 style="color: gray;">Proyecto actual:</h4>
                    <h2 style="color: gray;" class="mb-5"> {{proyecto.titulo}} </h2><br><br>              
                    <h3 class="mb-5" style="color:navy;"> Linea de avance del proyecto </h3>
                </div>

                <div class="m-5" align="center">
                    <div class="d-flex justify-content-center">
                        <div class="progress-container">

                            <div class="progress" id="progress"></div>
                            <div class="circle active"><i class="fas fa-folder-open"></i></div>
                            <div class="circle "><i class="far fa-file-alt"></i></div>
                            <div class="circle "><i class="fas fa-list-ul"></i> </div>
                            <div class="circle "><i class="far fa-check-circle"></i></div>
                            <div class="circle "><i class="far fa-check-circle"></i></div>
                            <div class="circle "><i class="far fa-check-circle"></i></div>
                            <div class="circle "><i class="far fa-check-circle"></i></div>
                            <div class="circle "><i class="far fa-flag"></i></div>

                        </div>
                    </div>
                </div>

                <input type="hidden" name="avance" id="avance" value="{{avance}}">
                <input type="hidden" name="estado" id="estado" value="{{estado}}">
                <input type="hidden" name="id_proyecto" id="id_proyecto" value="{{proyecto.id_proyecto}}">

                {{!-- En caso de ser administrador mostrarboton de terminar --}}
                {{#if admin}}
                <div class="m-5" align="center" id="terminar">
                    <td align="center">
                        <a href="#" class="btn btn-sm btn-outline-success" onclick="ver(event)">
                            <i class="fas fa-info"></i>&ensp;Terminar Proyecto</a>
                    </td>
                </div>
                {{/if}}

            </div>
        </div>
    </div>
</div>

{{!-- Media queries --}}
<style>
    @media (min-width: 768px) {
        #contenedorprincipal {
            width: 75% !important;
        }
    }

    @media (max-width: 767px) {
        #principal {
            margin-left: 0px !important;
        }
    }
</style>

<script>
    window.onload = actualiza;
    const progress = document.getElementById("progress");
    const circles = document.querySelectorAll(".circle");

    function actualiza() {

        let status = parseInt(document.getElementById("estado").value);
        let currentActive = parseInt(document.getElementById("avance").value);

        if (currentActive == 8 || currentActive == 9) {
            document.getElementById("terminar").style.visibility = 'hidden';
        }

        console.log("valor", currentActive);
        if (currentActive > 8) {
            currentActive = 8;
        } else if (currentActive < 0) {
            currentActive = -1;
        }
        console.log("final", currentActive);
        circles.forEach((circle, idx) => {

            if (idx < currentActive) {

                if (status == 1) { circle.classList.add("active"); }
                if (status == 2) { circle.classList.add("atrasado"); }
                if (status == 3) { circle.classList.add("terminado"); }

            } else {
                circle.classList.remove("active");
                circle.classList.remove("atrasado");
                circle.classList.remove("terminado");

            }
        });
        //const actives = document.querySelectorAll(".active");
        // console.log(actives.length, circles.length);
        if (currentActive > 0) {
            if (status == 1) { progress.classList.add("active"); }
            if (status == 2) { progress.classList.add("atrasado"); }
            if (status == 3) { progress.classList.add("terminado"); }
            progress.style.width = ((currentActive - 1) / (circles.length - 1)) * 100 + "%";
        } else { progress.style.width = 0 + "%" }
    }

    function ver(event) {
        let avance = parseInt(document.getElementById("avance").value);
        let id_proyecto = document.getElementById("id_proyecto").value;
        if (avance == 7) {
            var r = confirm("  ¿desea marcar como terminado  el proyecto?");
            if (r == true) {
                // txt = "You pressed OK!";

                window.location.href = "/proyecto/terminar/" + id_proyecto;

            }

        } else {

            var r = confirm(" Este proyecto aun no esta terminado.\n ¿Desea marcarlo como cancelado?");
            if (r == true) {
                // txt = "You pressed OK!";

                window.location.href = "/proyecto/terminar/" + id_proyecto;

            }
        }

    }
</script>